<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    <!-- 启用spring mvc 注解 -->
    <context:annotation-config />
    
    <!-- 扫描controller（controller层注入） -->
   <context:component-scan base-package="cn.springmvc.controller"/>
   
   <!-- 避免IE在ajax请求时，返回json出现下载 -->
   <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	
   <!-- 对模型视图添加前后缀 -->
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
      p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/> <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  --> 
      
      <!-- 
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"/>  
        <property name="suffix" value=".jsp"/> 
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
    </bean> 
       -->
       
       
     <!-- 拦截器 -->  
    <mvc:interceptors>  
     	<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 --> 
        <bean class="cn.springmvc.Inteceptor.MyInteceptor" />  

        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->  
        <!--  <mvc:interceptor>  
	        <mvc:mapping path="/test/number.do"/>   
	        <bean class="com.host.app.web.interceptor.LoginInterceptor"/>  
	    </mvc:interceptor>  --> 
    </mvc:interceptors>
      
</beans>